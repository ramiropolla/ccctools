#!/bin/sh

CC=gcc
CXX=g++

# source path
SP=$(cd $(dirname $0) && pwd)
# build path
BP=$(pwd)

print_help() {
cat << EOF
Available options are:
--cc=*       Set CC to be used
--cxx=*      Set CXX to be used
--target=*   Set target arch, must be one of:
             ppc, ppc64, i686, x86_64, arm
EOF
}

for opt do
    optval="${opt#*=}"
    case ${opt} in
    --cxx=*)
        CXX=${optval}
    ;;
    --cc=*)
        CC=${optval}
    ;;
    --target=*)
        case ${optval} in
        ppc)    TARGET=ppc-apple-darwin10;;
        ppc64)  TARGET=ppc64-apple-darwin10;;
        i686)   TARGET=i686-apple-darwin10;;
        x86_64) TARGET=x86_64-apple-darwin10;;
        arm)    TARGET=arm-apple-darwin10;;
        esac
    ;;
    *)
        print_help
    ;;
    esac
done

if [ -z "$TARGET" ]; then
    echo "--target= must be set!"
    exit -1
fi

if [ "$SP" != "$BP" ]; then
    DIRS="
        cctools/misc
        cctools/libmacho
        cctools/otool
        cctools/libstuff
        cctools/as
        cctools/ar
        cctools/ld
        ld64/src
        ld64/src/ld
        ld64/src/other
        ld64/src/abstraction
        "
    FILES="
        Makefile
        cctools/misc/Makefile.ccc
        cctools/libmacho/Makefile.ccc
        cctools/otool/Makefile.ccc
        cctools/libstuff/Makefile.ccc
        cctools/as/Makefile.ccc
        cctools/ar/Makefile.ccc
        cctools/ld/Makefile.ccc
        ld64/Makefile.ccc
        "
    for DIR in $DIRS; do
        mkdir -p $DIR;
    done
    for FILE in $FILES; do
        ln -sf ${SP}/$FILE ${BP}/$FILE;
    done
fi

echo "#Automatically generated by configure" > config.mak
echo CC=${CC}         >> config.mak
echo CXX=${CXX}       >> config.mak
echo TARGET=${TARGET} >> config.mak
echo SP=${SP}         >> config.mak
echo BP=${BP}         >> config.mak

echo "configure done, now make!"

exit 0
